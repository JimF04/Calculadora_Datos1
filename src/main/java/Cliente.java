import org.bytedeco.javacv.Java2DFrameConverter;
import org.bytedeco.javacv.OpenCVFrameConverter;
import org.bytedeco.javacv.OpenCVFrameGrabber;
import org.bytedeco.opencv.global.opencv_imgcodecs;
import org.bytedeco.opencv.opencv_core.IplImage;

import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.Date;


public class Cliente extends javax.swing.JFrame implements Runnable{

    /**
     * De aqui hasta la funcion sobrecargada de run() (linea 112), es puro codigo
     * autogenerado por Netbeans para la interfaz.
     */

    Socket socket;

    int puerto = 0;

    public Cliente() {
        initComponents();
        Thread hilo = new Thread(this);
        hilo.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        nombre_cliente1 = new javax.swing.JLabel();
        txt_mensaje1 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton54 = new javax.swing.JButton();
        jButton55 = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        Ventana_Logica = new javax.swing.JPanel();
        nombre_cliente3 = new javax.swing.JLabel();
        jButton65 = new javax.swing.JButton();
        jButton66 = new javax.swing.JButton();
        jButton67 = new javax.swing.JButton();
        igual_log = new javax.swing.JButton();
        jButton69 = new javax.swing.JButton();
        jButton70 = new javax.swing.JButton();
        jButton71 = new javax.swing.JButton();
        jButton56 = new javax.swing.JButton();
        jButton57 = new javax.swing.JButton();
        AC_log = new javax.swing.JButton();
        cam_log = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        pantalla_log = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextField1 = new javax.swing.JTextField();
        Ventana_Algebraica = new javax.swing.JPanel();
        nombre_cliente2 = new javax.swing.JLabel();
        jButton35 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton37 = new javax.swing.JButton();
        jButton38 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton42 = new javax.swing.JButton();
        jButton43 = new javax.swing.JButton();
        jButton44 = new javax.swing.JButton();
        jButton45 = new javax.swing.JButton();
        jButton46 = new javax.swing.JButton();
        jButton47 = new javax.swing.JButton();
        jButton48 = new javax.swing.JButton();
        jButton49 = new javax.swing.JButton();
        jButton50 = new javax.swing.JButton();
        igual_alge = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();
        cam_alge = new javax.swing.JButton();
        AC_alge = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        pantalla_alge = new javax.swing.JTextArea();

        nombre_cliente1.setText("Calculadora");




        txt_mensaje1.setText(" ");
        txt_mensaje1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_mensaje1ActionPerformed(evt);
            }
        });

        jButton9.setText("1");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton11.setText("2");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton21.setText("3");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setText("+");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setText("-");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton24.setText("6");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton25.setText("5");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton26.setText("4");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton27.setText("7");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jButton28.setText("8");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton29.setText("9");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jButton30.setText("0");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jButton31.setText("x");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        jButton32.setText("%");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        jButton33.setText("/");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        jButton34.setText("^");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        jButton54.setText("(");
        jButton54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton54ActionPerformed(evt);
            }
        });

        jButton55.setText(")");
        jButton55.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton55ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nombre_cliente3.setText("Calculadora");

        jButton65.setText("True");
        jButton65.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton65ActionPerformed(evt);
            }
        });

        jButton66.setText("False");
        jButton66.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton66ActionPerformed(evt);
            }
        });

        jButton67.setText("&");
        jButton67.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton67ActionPerformed(evt);
            }
        });

        igual_log.setText("=");
        igual_log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                igual_logActionPerformed(evt);
            }
        });

        jButton69.setText("|");
        jButton69.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton69ActionPerformed(evt);
            }
        });

        jButton70.setText("^");
        jButton70.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton70ActionPerformed(evt);
            }
        });

        jButton71.setText("~");
        jButton71.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton71ActionPerformed(evt);
            }
        });

        jButton56.setText("(");
        jButton56.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton56ActionPerformed(evt);
            }
        });

        jButton57.setText(")");
        jButton57.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton57ActionPerformed(evt);
            }
        });

        AC_log.setText("AC");
        AC_log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AC_logActionPerformed(evt);
            }
        });

        cam_log.setText("📷");
        cam_log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cam_logActionPerformed(evt);
            }
        });

        pantalla_log.setEditable(false);
        pantalla_log.setBackground(new java.awt.Color(255, 255, 255));
        pantalla_log.setColumns(22);
        pantalla_log.setRows(3);
        jScrollPane3.setViewportView(pantalla_log);

        javax.swing.GroupLayout Ventana_LogicaLayout = new javax.swing.GroupLayout(Ventana_Logica);
        Ventana_Logica.setLayout(Ventana_LogicaLayout);
        Ventana_LogicaLayout.setHorizontalGroup(
                Ventana_LogicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Ventana_LogicaLayout.createSequentialGroup()
                                .addGroup(Ventana_LogicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Ventana_LogicaLayout.createSequentialGroup()
                                                .addComponent(jButton65)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton66))
                                        .addGroup(Ventana_LogicaLayout.createSequentialGroup()
                                                .addGroup(Ventana_LogicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(Ventana_LogicaLayout.createSequentialGroup()
                                                                .addGap(75, 75, 75)
                                                                .addComponent(jButton67, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jButton69, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(Ventana_LogicaLayout.createSequentialGroup()
                                                                .addGap(81, 81, 81)
                                                                .addComponent(jButton70, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(jButton71, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(18, 18, 18)
                                                .addGroup(Ventana_LogicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jButton57)
                                                        .addComponent(jButton56)))
                                        .addGroup(Ventana_LogicaLayout.createSequentialGroup()
                                                .addGap(81, 81, 81)
                                                .addComponent(igual_log, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(Ventana_LogicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(AC_log, javax.swing.GroupLayout.PREFERRED_SIZE, 62, Short.MAX_VALUE)
                                        .addComponent(cam_log, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE))
                                .addGap(115, 115, 115))
                        .addGroup(Ventana_LogicaLayout.createSequentialGroup()
                                .addGroup(Ventana_LogicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(Ventana_LogicaLayout.createSequentialGroup()
                                                .addGap(55, 55, 55)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(Ventana_LogicaLayout.createSequentialGroup()
                                                .addGap(150, 150, 150)
                                                .addComponent(nombre_cliente3)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Ventana_LogicaLayout.setVerticalGroup(
                Ventana_LogicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Ventana_LogicaLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(nombre_cliente3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(Ventana_LogicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(Ventana_LogicaLayout.createSequentialGroup()
                                                .addGroup(Ventana_LogicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButton65)
                                                        .addComponent(jButton66))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(Ventana_LogicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButton67)
                                                        .addComponent(jButton69)
                                                        .addComponent(jButton56))
                                                .addGap(18, 18, 18)
                                                .addGroup(Ventana_LogicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButton70)
                                                        .addComponent(jButton71)))
                                        .addComponent(jButton57)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Ventana_LogicaLayout.createSequentialGroup()
                                                .addComponent(AC_log, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(cam_log, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(igual_log)
                                .addContainerGap(55, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Logica", Ventana_Logica);

        jTextField1.setEditable(false);
        jScrollPane1.setViewportView(jTextField1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
        );



        nombre_cliente2.setText("Calculadora");

        jButton35.setText("1");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        jButton36.setText("2");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        jButton37.setText("3");
        jButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton37ActionPerformed(evt);
            }
        });

        jButton38.setText("+");
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });

        jButton39.setText("-");
        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });

        jButton40.setText("6");
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });

        jButton41.setText("5");
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });

        jButton42.setText("4");
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });

        jButton43.setText("7");
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });

        jButton44.setText("8");
        jButton44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton44ActionPerformed(evt);
            }
        });

        jButton45.setText("9");
        jButton45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton45ActionPerformed(evt);
            }
        });

        jButton46.setText("0");
        jButton46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton46ActionPerformed(evt);
            }
        });

        jButton47.setText("*");
        jButton47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton47ActionPerformed(evt);
            }
        });

        jButton48.setText("%");
        jButton48.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton48ActionPerformed(evt);
            }
        });

        jButton49.setText("/");
        jButton49.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton49ActionPerformed(evt);
            }
        });

        jButton50.setText("**");
        jButton50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton50ActionPerformed(evt);
            }
        });

        igual_alge.setText("=");
        igual_alge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                igual_algeActionPerformed(evt);
            }
        });

        jButton52.setText("(");
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        jButton53.setText(")");
        jButton53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton53ActionPerformed(evt);
            }
        });

        cam_alge.setText("📷");
        cam_alge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cam_algeActionPerformed(evt);
            }
        });

        AC_alge.setText("AC");
        AC_alge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AC_algeActionPerformed(evt);
            }
        });

        pantalla_alge.setEditable(false);
        pantalla_alge.setBackground(new java.awt.Color(255, 255, 255));
        pantalla_alge.setColumns(30);
        pantalla_alge.setLineWrap(true);
        pantalla_alge.setRows(3);
        pantalla_alge.setTabSize(5);
        jScrollPane2.setViewportView(pantalla_alge);

        javax.swing.GroupLayout Ventana_AlgebraicaLayout = new javax.swing.GroupLayout(Ventana_Algebraica);
        Ventana_Algebraica.setLayout(Ventana_AlgebraicaLayout);
        Ventana_AlgebraicaLayout.setHorizontalGroup(
                Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(Ventana_AlgebraicaLayout.createSequentialGroup()
                                .addGroup(Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(Ventana_AlgebraicaLayout.createSequentialGroup()
                                                .addGap(43, 43, 43)
                                                .addGroup(Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(Ventana_AlgebraicaLayout.createSequentialGroup()
                                                                .addGroup(Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                .addGroup(Ventana_AlgebraicaLayout.createSequentialGroup()
                                                                                        .addGroup(Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                                .addGroup(Ventana_AlgebraicaLayout.createSequentialGroup()
                                                                                                        .addComponent(jButton43)
                                                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                                        .addComponent(jButton44)
                                                                                                        .addGap(13, 13, 13)
                                                                                                        .addComponent(jButton45)
                                                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                                        .addComponent(jButton47, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                                .addGroup(Ventana_AlgebraicaLayout.createSequentialGroup()
                                                                                                        .addComponent(jButton42)
                                                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                                        .addComponent(jButton41)
                                                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                                        .addComponent(jButton40)
                                                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                                        .addComponent(jButton48, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                        .addGroup(Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                                .addComponent(jButton39, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                                                                                .addComponent(jButton49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                        .addGroup(Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                                .addComponent(jButton52, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                                                                                                .addComponent(jButton53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                                                .addGroup(Ventana_AlgebraicaLayout.createSequentialGroup()
                                                                                        .addComponent(jButton35)
                                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                        .addComponent(jButton36)
                                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                        .addComponent(jButton37)
                                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                        .addComponent(jButton38, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                        .addComponent(jButton50, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)))
                                                                        .addGroup(Ventana_AlgebraicaLayout.createSequentialGroup()
                                                                                .addComponent(jButton46, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(igual_alge, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(AC_alge, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(cam_alge, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGroup(Ventana_AlgebraicaLayout.createSequentialGroup()
                                                .addGap(161, 161, 161)
                                                .addComponent(nombre_cliente2)))
                                .addContainerGap(69, Short.MAX_VALUE))
        );
        Ventana_AlgebraicaLayout.setVerticalGroup(
                Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Ventana_AlgebraicaLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(nombre_cliente2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(Ventana_AlgebraicaLayout.createSequentialGroup()
                                                .addGroup(Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButton35)
                                                        .addComponent(jButton36)
                                                        .addComponent(jButton37)
                                                        .addComponent(jButton38)
                                                        .addComponent(jButton50))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButton42)
                                                        .addComponent(jButton41)
                                                        .addComponent(jButton40)
                                                        .addComponent(jButton48)
                                                        .addComponent(jButton39)
                                                        .addComponent(jButton52)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Ventana_AlgebraicaLayout.createSequentialGroup()
                                                .addGap(31, 31, 31)
                                                .addComponent(AC_alge, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(Ventana_AlgebraicaLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButton43)
                                                        .addComponent(jButton44)
                                                        .addComponent(jButton45)
                                                        .addComponent(jButton49)
                                                        .addComponent(jButton47)
                                                        .addComponent(jButton53))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(Ventana_AlgebraicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButton46)
                                                        .addComponent(igual_alge))
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Ventana_AlgebraicaLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(cam_alge, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(102, 102, 102))))
        );

        jTabbedPane2.addTab("Algebrica", Ventana_Algebraica);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane2)
        );



        // Creando el panel para la nueva pestaña "puntos extra"
        JPanel puntosExtraPanel = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(5, 5, 5, 5); // Márgenes entre componentes

// Agregar el JLabel "Puntos extra Porfa" arriba del panel
        JLabel titleLabel = new JLabel("Puntos extra Porfa \uD83D\uDE4F");
        gbc.gridwidth = 2; // Establece el ancho para que abarque 2 columnas
        puntosExtraPanel.add(titleLabel, gbc);
        gbc.gridwidth = 1; // Restaura el ancho a 1

        gbc.gridy = 1; // Incrementa la fila para los otros componentes

// Creando y añadiendo componentes para el límite inferior
        JLabel lowerLimitLabel = new JLabel("Límite inferior:");
        JTextField lowerLimitTextField = new JTextField(10);
        puntosExtraPanel.add(lowerLimitLabel, gbc);
        gbc.gridx = 1;
        puntosExtraPanel.add(lowerLimitTextField, gbc);
        gbc.gridx = 0;
        gbc.gridy = 2;

// Creando y añadiendo componentes para el límite superior
        JLabel upperLimitLabel = new JLabel("Límite superior:");
        JTextField upperLimitTextField = new JTextField(10);
        puntosExtraPanel.add(upperLimitLabel, gbc);
        gbc.gridx = 1;
        puntosExtraPanel.add(upperLimitTextField, gbc);
        gbc.gridx = 0;
        gbc.gridy = 3;

// Creando y añadiendo componentes para la expresión
        JLabel expressionLabel = new JLabel("Expresión:");
        JTextField expressionTextField = new JTextField(20);
        puntosExtraPanel.add(expressionLabel, gbc);
        gbc.gridx = 1;
        puntosExtraPanel.add(expressionTextField, gbc);
        gbc.gridx = 0;
        gbc.gridy = 4;

// Creando y añadiendo el botón "="
        JButton equalsButton = new JButton("=");
        puntosExtraPanel.add(new JLabel(), gbc); // Espacio vacío
        gbc.gridx = 1;
        puntosExtraPanel.add(equalsButton, gbc);

// Añadiendo el nuevo panel al JTabbedPane existente
// Suponiendo que la variable del JTabbedPane se llama "jTabbedPane2"
        jTabbedPane2.addTab("Puntos extra", puntosExtraPanel);



        pack();
    }// </editor-fold>
    /**
     * Este método se llama cuando se realiza una acción en el componente txt_mensaje1.
     *
     * @param evt El evento de acción que desencadenó este método.
     *
     *
     */

    
    private void txt_mensaje1ActionPerformed(java.awt.event.ActionEvent evt) {

    }

    /**
     * Este método se llama cuando se hace clic en el botón jButton9.
     * Agrega el texto del botón jButton9 a la pantalla_alge (supongo que es un componente de texto o área de texto).
     *
     * @param evt El evento de acción que desencadenó este método.
     */
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton9.getText());
    }

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton11.getText());
    }

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton21.getText());
    }

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton22.getText());
    }

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton23.getText());
    }

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton24.getText());
    }

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton25.getText());
    }

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton26.getText());
    }

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton27.getText());
    }

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton28.getText());
    }

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton29.getText());
    }

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton30.getText());
    }

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton31.getText());
    }

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton32.getText());
    }

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton33.getText());
    }

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton34.getText());
    }

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton35.getText());
    }

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton36.getText());
    }

    private void jButton37ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton37.getText());
    }

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton38.getText());
    }

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton39.getText());
    }

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton40.getText());
    }

    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton41.getText());
    }

    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton42.getText());
    }

    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton43.getText());
    }

    private void jButton44ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton44.getText());
    }

    private void jButton45ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton45.getText());
    }

    private void jButton46ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton46.getText());
    }

    private void jButton47ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton47.getText());
    }

    private void jButton48ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton48.getText());
    }

    private void jButton49ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton49.getText());
    }

    private void jButton50ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton50.getText());
    }
    /**
     * Este método se llama cuando se realiza una acción en el botón igual_alge.
     * Realiza los siguientes pasos:
     * 1. Obtiene la expresión matemática ingresada en el componente pantalla_alge.
     * 2. Imprime la expresión en la consola.
     * 3. Crea una instancia de la clase AlgebraicTree (supongo que realiza operaciones matemáticas).
     * 4. Calcula el resultado de la expresión y lo muestra en pantalla_alge.
     * 5. Obtiene la fecha y hora actual en el formato "dd-MM-yyyy HH:mm:ss".
     * 6. Envía los datos de la expresión, resultado y fecha al servidor a través del método send().
     *
     * @param evt El evento de acción que desencadenó este método.
     */
    private void igual_algeActionPerformed(java.awt.event.ActionEvent evt) {
        String exp = pantalla_alge.getText();
        System.out.println(exp);
        AlgebraicTree AA = new AlgebraicTree();
        pantalla_alge.setText(Float.toString(AA.result(exp)));
        String currentDate = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(new Date());
        try {
            send(puerto+ ","+exp+","+Float.toString(AA.result(exp))+","+currentDate);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }


    }

    private void jButton65ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_log.append(jButton65.getText()+" ");
    }

    private void jButton66ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_log.append(jButton66.getText()+" ");
    }

    private void jButton67ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_log.append(jButton67.getText()+" ");
    }

    private void igual_logActionPerformed(java.awt.event.ActionEvent evt) {
        String exp_log = pantalla_log.getText();
        LogicTree LA = new LogicTree();
        pantalla_log.setText(Boolean.toString(LA.result(exp_log)));

    }

    private void jButton69ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_log.append(jButton69.getText()+" ");
    }

    private void jButton70ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_log.append(jButton70.getText()+" ");
    }

    private void jButton71ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_log.append(jButton71.getText()+" ");
    }

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton52.getText());
    }

    private void jButton53ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton53.getText());
    }

    private void jButton54ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton54.getText());
    }

    private void jButton55ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.append(jButton55.getText());
    }

    private void jButton56ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_log.append(jButton56.getText()+" ");
    }

    private void jButton57ActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_log.append(jButton57.getText()+" ");
    }
    /**
     * Este método se llama cuando se realiza una acción en el botón cam_alge.
     * Realiza los siguientes pasos:
     * 1. Crea una instancia de la clase CameraFrame, que parece estar relacionada con una cámara.
     * 2. Define un TextCallback que implementa el método appendText() para manejar el texto obtenido de la cámara.
     * 3. Muestra la ventana de la cámara (CameraFrame).
     *
     * @param evt El evento de acción que desencadenó este método.
     */
    private void cam_algeActionPerformed(java.awt.event.ActionEvent evt) {
        CameraFrame cameraFrame = new CameraFrame(new TextCallback() {
            @Override
            public void appendText(String text) {
                pantalla_alge.append(text);
            }
        });
        cameraFrame.setVisible(true);
    }

    private void AC_algeActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_alge.setText("");

    }

    private void AC_logActionPerformed(java.awt.event.ActionEvent evt) {
        pantalla_log.setText("");

    }
    /**
     * Este método se llama cuando se realiza una acción en el botón cam_log.
     * Realiza los siguientes pasos:
     * 1. Crea una instancia de la clase CameraFrame, que parece estar relacionada con una cámara.
     * 2. Define un TextCallback que implementa el método appendText() para manejar el texto obtenido de la cámara.
     * 3. Muestra la ventana de la cámara (CameraFrame).
     * 4. Agrega el texto obtenido de la cámara a la pantalla_log.
     *
     * @param evt El evento de acción que desencadenó este método.
     */
    private void cam_logActionPerformed(java.awt.event.ActionEvent evt) {
        CameraFrame cameraFrame = new CameraFrame(new TextCallback() {
            @Override
            public void appendText(String text) {
                pantalla_log.append(text);
            }
        });
        cameraFrame.setVisible(true);

    }
    /**
     * Interfaz que define un callback para agregar texto.
     */
    public interface TextCallback {
        /**
         * Método que se llama para agregar texto.
         *
         * @param text El texto que se debe agregar.
         */
        void appendText(String text);
    }



    /**
     * Código autogenerado por Netbeans para la interfaz gráfica
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    public javax.swing.JButton AC_alge;
    public javax.swing.JButton AC_log;
    public javax.swing.JPanel Ventana_Algebraica;
    public javax.swing.JPanel Ventana_Logica;
    public javax.swing.JButton cam_alge;
    public javax.swing.JButton cam_log;
    public javax.swing.JButton igual_alge;
    public javax.swing.JButton igual_log;
    public javax.swing.JButton jButton11;
    public javax.swing.JButton jButton21;
    public javax.swing.JButton jButton22;
    public javax.swing.JButton jButton23;
    public javax.swing.JButton jButton24;
    public javax.swing.JButton jButton25;
    public javax.swing.JButton jButton26;
    public javax.swing.JButton jButton27;
    public javax.swing.JButton jButton28;
    public javax.swing.JButton jButton29;
    public javax.swing.JButton jButton30;
    public javax.swing.JButton jButton31;
    public javax.swing.JButton jButton32;
    public javax.swing.JButton jButton33;
    public javax.swing.JButton jButton34;
    public javax.swing.JButton jButton35;
    public javax.swing.JButton jButton36;
    public javax.swing.JButton jButton37;
    public javax.swing.JButton jButton38;
    public javax.swing.JButton jButton39;
    public javax.swing.JButton jButton40;
    public javax.swing.JButton jButton41;
    public javax.swing.JButton jButton42;
    public javax.swing.JButton jButton43;
    public javax.swing.JButton jButton44;
    public javax.swing.JButton jButton45;
    public javax.swing.JButton jButton46;
    public javax.swing.JButton jButton47;
    public javax.swing.JButton jButton48;
    public javax.swing.JButton jButton49;
    public javax.swing.JButton jButton50;
    public javax.swing.JButton jButton52;
    public javax.swing.JButton jButton53;
    public javax.swing.JButton jButton54;
    public javax.swing.JButton jButton55;
    public javax.swing.JButton jButton56;
    public javax.swing.JButton jButton57;
    public javax.swing.JButton jButton65;
    public javax.swing.JButton jButton66;
    public javax.swing.JButton jButton67;
    public javax.swing.JButton jButton69;
    public javax.swing.JButton jButton70;
    public javax.swing.JButton jButton71;
    public javax.swing.JButton jButton9;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTabbedPane jTabbedPane2;
    public javax.swing.JTextField jTextField1;
    public javax.swing.JLabel nombre_cliente1;
    public javax.swing.JLabel nombre_cliente2;
    public javax.swing.JLabel nombre_cliente3;
    public javax.swing.JTextArea pantalla_alge;
    public javax.swing.JTextArea pantalla_log;
    public javax.swing.JTextField txt_mensaje1;
    // End of variables declaration



    public void send(String mensaje) throws IOException {
        Socket socket = new Socket("127.0.0.1",6000);
        DataOutputStream out = new DataOutputStream(socket.getOutputStream());
        out.writeUTF(mensaje);
        socket.close();


    }




    /**
     * Implementación del método run de la interfaz Runnable.
     * Este método se ejecuta en un hilo separado y realiza las siguientes acciones:
     *
     * 1. Se conecta a un socket con un puerto libre y codifica ese puerto para enviarlo al servidor.
     *    El puerto se codifica transformándolo en una cadena y añadiéndole un "0" al principio.
     *    Luego, envía el puerto codificado al servidor para su almacenamiento (Ver Server.java).
     *
     * 2. Crea un Socket para escuchar los mensajes que le envíe el servidor y los muestra en pantalla.
     *
     * Este método se ejecuta en un bucle infinito para mantener la conexión y recibir mensajes continuamente.
     */
    @Override
    public void run() {

        try {

            /**
             * Se conecta a un socket con un puerto libre, y luego codifica al puerto
             * para enviarlo al servidor y que este lo guarde. Ver Server.java
             *
             * El puerto se codifica transformandolo en un string y añadiendole un "0"
             * al principio.
             */
            ServerSocket server = new ServerSocket(0);
            Socket socket = new Socket("127.0.0.1",6000);

            puerto = server.getLocalPort();


            String puerto_codificado = String.valueOf("0" + puerto);

            DataOutputStream out = new DataOutputStream(socket.getOutputStream());
            out.writeUTF(puerto_codificado);
            socket.close();

            /**
             * Crea un Socket para escuchar los mensajes que le envie el servidor, y luego
             * los muestra en pantalla
             */
            while(true){
                Socket serversocker =  server.accept();
                DataInputStream datos = new DataInputStream(serversocker.getInputStream());
                String mensajes = datos.readUTF();

            }

        } catch (Exception e) {
            System.out.println(e);}
    }
}
/**
 * Clase que representa una ventana de cámara para capturar imágenes y procesar texto mediante OCR.
 */
class CameraFrame extends JFrame {
    private JButton btnTakePhoto;
    private JLabel cameraLabel;
    private OpenCVFrameGrabber grabber;
    private IplImage currentFrame;
    private final Lock grabberLock = new ReentrantLock();
    private volatile boolean isRunning = true;
    private Thread cameraThread;
    private JButton btnCloseCamera;
    private Cliente.TextCallback textCallback;

    /**
     * Constructor de la clase CameraFrame.
     *
     * @param textCallback Un objeto que implementa la interfaz TextCallback para agregar texto.
     */
    public CameraFrame(Cliente.TextCallback textCallback) {
        this.textCallback = textCallback;

        setTitle("Camera");
        setSize(900, 600);
        setLayout(new BorderLayout());

        cameraLabel = new JLabel();
        add(cameraLabel, BorderLayout.CENTER);

        btnTakePhoto = new JButton("Take Photo");
        btnTakePhoto.addActionListener(e -> captureAndProcess());

        // Inicialización del botón "Close Camera"
        btnCloseCamera = new JButton("Close Camera");
        btnCloseCamera.addActionListener(e -> {
            closeAndDispose(); // Método que cierra y libera la cámara y termina la ventana
        });

        JPanel southPanel = new JPanel(); // Panel para contener ambos botones
        southPanel.add(btnTakePhoto);
        southPanel.add(btnCloseCamera);
        add(southPanel, BorderLayout.SOUTH);
        startCamera();

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                isRunning = false;
                if (cameraThread != null) {
                    try {
                        cameraThread.join(); // Asegúrate de que el thread de la cámara termine antes de proceder.
                    } catch (InterruptedException ex) {
                        ex.printStackTrace();
                    }
                }
                closeCamera(); // Crea este método
            }
        });


        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * Inicia la cámara y comienza a capturar imágenes.
     */
    public void startCamera() {
        grabberLock.lock();
        try {
            if (grabber == null) {
                grabber = new OpenCVFrameGrabber(0);
                grabber.setImageWidth(832);
                grabber.setImageHeight(468);
                grabber.start();
            }

            Java2DFrameConverter converter = new Java2DFrameConverter();
            cameraThread = new Thread(() -> {
                try {
                    while (isRunning) {
                        org.bytedeco.javacv.Frame frame = grabber.grab();
                        if (frame == null) break;
                        currentFrame = new OpenCVFrameConverter.ToIplImage().convert(frame);
                        SwingUtilities.invokeLater(() -> {
                            ImageIcon icon = new ImageIcon(converter.getBufferedImage(frame));
                            cameraLabel.setIcon(icon);
                        });
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            });
            cameraThread.start();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            grabberLock.unlock();
        }
    }

    /**
     * Captura una imagen actual, la procesa mediante OCR y muestra el texto en pantalla.
     */
    public void captureAndProcess() {
        if (currentFrame != null) {
            LocalDateTime now = LocalDateTime.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyyMMdd_HHmmss");
            String formattedNow = now.format(formatter);

            File photosDir = new File("photos");
            if (!photosDir.exists()) {
                photosDir.mkdir();
            }

            String savedImagePath = "photos/" + formattedNow + ".png";
            opencv_imgcodecs.cvSaveImage(savedImagePath, currentFrame);

            try {
                String extractedText = OCR.detectDocument(savedImagePath);
                textCallback.appendText(extractedText); // Llama al método de la interfaz para agregar el texto
            } catch (Exception e) {
                e.printStackTrace();
            }

            File file = new File(savedImagePath);
            file.delete();
            closeAndDispose();
        } else {
            System.out.println("No image to process.");
        }
    }
    /**
     * Cierra la cámara y libera sus recursos.
     */
    public void closeCamera() {
        grabberLock.lock();
        try {
            if (grabber != null) {
                grabber.stop();
                grabber.release();
                grabber = null;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            grabberLock.unlock();
        }
    }
    /**
     * Cierra la cámara, libera sus recursos y finaliza la ventana.
     */
    public void closeAndDispose() {
        isRunning = false;
        if (cameraThread != null) {
            try {
                cameraThread.join(); // Asegúrate de que el thread de la cámara termine antes de proceder.
            } catch (InterruptedException ex) {
                ex.printStackTrace();
            }
        }
        closeCamera();
        dispose(); // Cierra la ventana
    }
}